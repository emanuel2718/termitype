name: CI

on:
  push:
    # branches: ["main"]
    branches: ["ci/test-workflow"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_PROFILE_DEV_DEBUG: 0

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install cargo-audit
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-audit

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: "test"

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Clippy
        run: cargo clippy -- -D warnings

      - name: Security audit
        run: cargo audit

      - name: Run tests
        run: cargo test

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: "build"

      - name: Build debug
        run: cargo build --verbose

      - name: Build release
        run: cargo build --release --verbose

  cross-platform:
    name: Cross-platform check
    needs: test
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          key: "cross-${{ matrix.os }}"

      - name: Build
        run: cargo build

      - name: Test
        run: cargo test
